(("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd=("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd||[]).push([["8957df1d"],{"8957df1d":function(e,a,t){"use strict";t.d(a,"__esModule",{value:!0}),t.d(a,"texts",{enumerable:!0,get:function(){return d;}}),t("b6813361");let d=[{value:"It is a select control essentially which can be use for selecting multiple items.",paraId:0,tocIndex:0},{value:"Transfer can display more information for items and take up more space.",paraId:0,tocIndex:0},{value:"Transfer the elements between two columns in an intuitive and efficient way.",paraId:1,tocIndex:0},{value:"One or more elements can be selected from either column, one click on the proper ",paraId:2,tocIndex:0},{value:"direction",paraId:2,tocIndex:0},{value:" button, and the transfer is done. The left column is considered the ",paraId:2,tocIndex:0},{value:"source",paraId:2,tocIndex:0},{value:" and the right column is considered the ",paraId:2,tocIndex:0},{value:"target",paraId:2,tocIndex:0},{value:". As you can see in the API description, these names are reflected in.",paraId:2,tocIndex:0},{value:"notice: Transfer is a controlled component, uncontrolled mode is not supported.",paraId:3,tocIndex:0},{value:"Common props ref\uFF1A",paraId:4,tocIndex:13},{value:"Common props",paraId:5,tocIndex:13},{value:"Property",paraId:6,tocIndex:13},{value:"Description",paraId:6,tocIndex:13},{value:"Type",paraId:6,tocIndex:13},{value:"Default",paraId:6,tocIndex:13},{value:"Version",paraId:6,tocIndex:13},{value:"dataSource",paraId:6,tocIndex:13},{value:"Used for setting the source data. The elements that are part of this array will be present the left column. Except the elements whose keys are included in ",paraId:6,tocIndex:13},{value:"targetKeys",paraId:6,tocIndex:13},{value:" prop",paraId:6,tocIndex:13},{value:"RecordType extends TransferItem = TransferItem",paraId:6,tocIndex:13},{value:"[]",paraId:6,tocIndex:13},{value:"[]",paraId:6,tocIndex:13},{value:"disabled",paraId:6,tocIndex:13},{value:"Whether disabled transfer",paraId:6,tocIndex:13},{value:"boolean",paraId:6,tocIndex:13},{value:"false",paraId:6,tocIndex:13},{value:"selectionsIcon",paraId:6,tocIndex:13},{value:"custom dropdown icon",paraId:6,tocIndex:13},{value:"React.ReactNode",paraId:6,tocIndex:13},{value:"5.8.0",paraId:6,tocIndex:13},{value:"filterOption",paraId:6,tocIndex:13},{value:"A function to determine whether an item should show in search result list, only works when searching, (add ",paraId:6,tocIndex:13},{value:"direction",paraId:6,tocIndex:13},{value:" support since 5.9.0+)",paraId:6,tocIndex:13},{value:"(inputValue, option, direction: ",paraId:6,tocIndex:13},{value:"left",paraId:6,tocIndex:13},{value:" | ",paraId:6,tocIndex:13},{value:"right",paraId:6,tocIndex:13},{value:"): boolean",paraId:6,tocIndex:13},{value:"-",paraId:6,tocIndex:13},{value:"footer",paraId:6,tocIndex:13},{value:"A function used for rendering the footer",paraId:6,tocIndex:13},{value:"(props, { direction }) => ReactNode",paraId:6,tocIndex:13},{value:"-",paraId:6,tocIndex:13},{value:"direction: 4.17.0",paraId:6,tocIndex:13},{value:"listStyle",paraId:6,tocIndex:13},{value:"A custom CSS style used for rendering the transfer columns",paraId:6,tocIndex:13},{value:"object | ({direction: ",paraId:6,tocIndex:13},{value:"left",paraId:6,tocIndex:13},{value:" | ",paraId:6,tocIndex:13},{value:"right",paraId:6,tocIndex:13},{value:"}) => object",paraId:6,tocIndex:13},{value:"-",paraId:6,tocIndex:13},{value:"locale",paraId:6,tocIndex:13},{value:"The i18n text including filter, empty text, item unit, etc",paraId:6,tocIndex:13},{value:"{ itemUnit: string; itemsUnit: string; searchPlaceholder: string; notFoundContent: ReactNode | ReactNode[]; }",paraId:6,tocIndex:13},{value:"{ itemUnit: ",paraId:6,tocIndex:13},{value:"item",paraId:6,tocIndex:13},{value:", itemsUnit: ",paraId:6,tocIndex:13},{value:"items",paraId:6,tocIndex:13},{value:", notFoundContent: ",paraId:6,tocIndex:13},{value:"The list is empty",paraId:6,tocIndex:13},{value:", searchPlaceholder: ",paraId:6,tocIndex:13},{value:"Search here",paraId:6,tocIndex:13},{value:" }",paraId:6,tocIndex:13},{value:"oneWay",paraId:6,tocIndex:13},{value:"Display as single direction style",paraId:6,tocIndex:13},{value:"boolean",paraId:6,tocIndex:13},{value:"false",paraId:6,tocIndex:13},{value:"4.3.0",paraId:6,tocIndex:13},{value:"operations",paraId:6,tocIndex:13},{value:"A set of operations that are sorted from top to bottom",paraId:6,tocIndex:13},{value:"string[]",paraId:6,tocIndex:13},{value:"[",paraId:6,tocIndex:13},{value:">",paraId:6,tocIndex:13},{value:", ",paraId:6,tocIndex:13},{value:"<",paraId:6,tocIndex:13},{value:"]",paraId:6,tocIndex:13},{value:"operationStyle",paraId:6,tocIndex:13},{value:"A custom CSS style used for rendering the operations column",paraId:6,tocIndex:13},{value:"object",paraId:6,tocIndex:13},{value:"-",paraId:6,tocIndex:13},{value:"pagination",paraId:6,tocIndex:13},{value:"Use pagination. Not work in render props",paraId:6,tocIndex:13},{value:"boolean | { pageSize: number, simple: boolean, showSizeChanger?: boolean, showLessItems?: boolean }",paraId:6,tocIndex:13},{value:"false",paraId:6,tocIndex:13},{value:"4.3.0",paraId:6,tocIndex:13},{value:"render",paraId:6,tocIndex:13},{value:"The function to generate the item shown on a column. Based on an record (element of the dataSource array), this function should return a React element which is generated from that record. Also, it can return a plain object with ",paraId:6,tocIndex:13},{value:"value",paraId:6,tocIndex:13},{value:" and ",paraId:6,tocIndex:13},{value:"label",paraId:6,tocIndex:13},{value:", ",paraId:6,tocIndex:13},{value:"label",paraId:6,tocIndex:13},{value:" is a React element and ",paraId:6,tocIndex:13},{value:"value",paraId:6,tocIndex:13},{value:" is for title",paraId:6,tocIndex:13},{value:"(record) => ReactNode",paraId:6,tocIndex:13},{value:"-",paraId:6,tocIndex:13},{value:"selectAllLabels",paraId:6,tocIndex:13},{value:"A set of customized labels for select all checkboxes on the header",paraId:6,tocIndex:13},{value:"(ReactNode | (info: { selectedCount: number, totalCount: number }) => ReactNode)[]",paraId:6,tocIndex:13},{value:"-",paraId:6,tocIndex:13},{value:"selectedKeys",paraId:6,tocIndex:13},{value:"A set of keys of selected items",paraId:6,tocIndex:13},{value:"string[] | number[]",paraId:6,tocIndex:13},{value:"[]",paraId:6,tocIndex:13},{value:"showSearch",paraId:6,tocIndex:13},{value:"If included, a search box is shown on each column",paraId:6,tocIndex:13},{value:"boolean | { placeholder:string,defaultValue:string }",paraId:6,tocIndex:13},{value:"false",paraId:6,tocIndex:13},{value:"showSelectAll",paraId:6,tocIndex:13},{value:"Show select all checkbox on the header",paraId:6,tocIndex:13},{value:"boolean",paraId:6,tocIndex:13},{value:"true",paraId:6,tocIndex:13},{value:"status",paraId:6,tocIndex:13},{value:"Set validation status",paraId:6,tocIndex:13},{value:"'error' | 'warning'",paraId:6,tocIndex:13},{value:"-",paraId:6,tocIndex:13},{value:"4.19.0",paraId:6,tocIndex:13},{value:"targetKeys",paraId:6,tocIndex:13},{value:"A set of keys of elements that are listed on the right column",paraId:6,tocIndex:13},{value:"string[] | number[]",paraId:6,tocIndex:13},{value:"[]",paraId:6,tocIndex:13},{value:"titles",paraId:6,tocIndex:13},{value:"A set of titles that are sorted from left to right",paraId:6,tocIndex:13},{value:"ReactNode[]",paraId:6,tocIndex:13},{value:"-",paraId:6,tocIndex:13},{value:"onChange",paraId:6,tocIndex:13},{value:"A callback function that is executed when the transfer between columns is complete",paraId:6,tocIndex:13},{value:"(targetKeys, direction, moveKeys): void",paraId:6,tocIndex:13},{value:"-",paraId:6,tocIndex:13},{value:"onScroll",paraId:6,tocIndex:13},{value:"A callback function which is executed when scroll options list",paraId:6,tocIndex:13},{value:"(direction, event): void",paraId:6,tocIndex:13},{value:"-",paraId:6,tocIndex:13},{value:"onSearch",paraId:6,tocIndex:13},{value:"A callback function which is executed when search field are changed",paraId:6,tocIndex:13},{value:"(direction: ",paraId:6,tocIndex:13},{value:"left",paraId:6,tocIndex:13},{value:" | ",paraId:6,tocIndex:13},{value:"right",paraId:6,tocIndex:13},{value:", value: string): void",paraId:6,tocIndex:13},{value:"-",paraId:6,tocIndex:13},{value:"onSelectChange",paraId:6,tocIndex:13},{value:"A callback function which is executed when selected items are changed",paraId:6,tocIndex:13},{value:"(sourceSelectedKeys, targetSelectedKeys): void",paraId:6,tocIndex:13},{value:"-",paraId:6,tocIndex:13},{value:"Transfer accept ",paraId:7,tocIndex:14},{value:"children",paraId:7,tocIndex:14},{value:" to customize render list, using follow props:",paraId:7,tocIndex:14},{value:"Property",paraId:8,tocIndex:14},{value:"Description",paraId:8,tocIndex:14},{value:"Type",paraId:8,tocIndex:14},{value:"Version",paraId:8,tocIndex:14},{value:"direction",paraId:8,tocIndex:14},{value:"List render direction",paraId:8,tocIndex:14},{value:"left",paraId:8,tocIndex:14},{value:" | ",paraId:8,tocIndex:14},{value:"right",paraId:8,tocIndex:14},{value:"disabled",paraId:8,tocIndex:14},{value:"Disable list or not",paraId:8,tocIndex:14},{value:"boolean",paraId:8,tocIndex:14},{value:"filteredItems",paraId:8,tocIndex:14},{value:"Filtered items",paraId:8,tocIndex:14},{value:"RecordType[]",paraId:8,tocIndex:14},{value:"selectedKeys",paraId:8,tocIndex:14},{value:"Selected items",paraId:8,tocIndex:14},{value:"string[] | number[]",paraId:8,tocIndex:14},{value:"onItemSelect",paraId:8,tocIndex:14},{value:"Select item",paraId:8,tocIndex:14},{value:"(key: string | number, selected: boolean)",paraId:8,tocIndex:14},{value:"onItemSelectAll",paraId:8,tocIndex:14},{value:"Select a group of items",paraId:8,tocIndex:14},{value:"(keys: string[] | number[], selected: boolean)",paraId:8,tocIndex:14},{value:"<Transfer {...props}>{(listProps) => <YourComponent {...listProps} />}</Transfer>\n",paraId:9,tocIndex:15},{value:"According the ",paraId:10,tocIndex:16},{value:"standard",paraId:10,tocIndex:16},{value:" of React, the key should always be supplied directly to the elements in the array. In Transfer, the keys should be set on the elements included in ",paraId:10,tocIndex:16},{value:"dataSource",paraId:10,tocIndex:16},{value:" array. By default, ",paraId:10,tocIndex:16},{value:"key",paraId:10,tocIndex:16},{value:" property is used as an unique identifier.",paraId:10,tocIndex:16},{value:"If there's no ",paraId:11,tocIndex:16},{value:"key",paraId:11,tocIndex:16},{value:" in your data, you should use ",paraId:11,tocIndex:16},{value:"rowKey",paraId:11,tocIndex:16},{value:" to specify the key that will be used for uniquely identify each element.",paraId:11,tocIndex:16},{value:"// eg. your primary key is `uid`\nreturn <Transfer rowKey={(record) => record.uid} />;\n",paraId:12,tocIndex:16},{value:"In order to keep the page number synchronized, you can disable columns you checked without removing the option: ",paraId:13,tocIndex:19},{value:"https://codesandbox.io/s/objective-wing-6iqbx",paraId:13,tocIndex:19}];}}]);