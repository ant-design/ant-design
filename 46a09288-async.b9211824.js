(("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd=("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd||[]).push([["46a09288"],{"46a09288":function(a,e,d){"use strict";d.d(e,"__esModule",{value:!0}),d.d(e,"texts",{enumerable:!0,get:function(){return t;}}),d("6c8ca525");let t=[{value:"Badge normally appears in proximity to notifications or user avatars with eye-catching appeal, typically displaying unread messages count.",paraId:0,tocIndex:0},{value:"Common props ref\uFF1A",paraId:1,tocIndex:18},{value:"Common props",paraId:2,tocIndex:18},{value:"Property",paraId:3,tocIndex:19},{value:"Description",paraId:3,tocIndex:19},{value:"Type",paraId:3,tocIndex:19},{value:"Default",paraId:3,tocIndex:19},{value:"Version",paraId:3,tocIndex:19},{value:"color",paraId:3,tocIndex:19},{value:"Customize Badge dot color",paraId:3,tocIndex:19},{value:"string",paraId:3,tocIndex:19},{value:"-",paraId:3,tocIndex:19},{value:"count",paraId:3,tocIndex:19},{value:"Number to show in badge",paraId:3,tocIndex:19},{value:"ReactNode",paraId:3,tocIndex:19},{value:"-",paraId:3,tocIndex:19},{value:"classNames",paraId:3,tocIndex:19},{value:"Semantic DOM class",paraId:3,tocIndex:19},{value:"Record<SemanticDOM, string>",paraId:4,tocIndex:19},{value:"-",paraId:3,tocIndex:19},{value:"5.7.0",paraId:3,tocIndex:19},{value:"dot",paraId:3,tocIndex:19},{value:"Whether to display a red dot instead of ",paraId:3,tocIndex:19},{value:"count",paraId:3,tocIndex:19},{value:"boolean",paraId:3,tocIndex:19},{value:"false",paraId:3,tocIndex:19},{value:"offset",paraId:3,tocIndex:19},{value:"Set offset of the badge dot",paraId:3,tocIndex:19},{value:"[number, number]",paraId:3,tocIndex:19},{value:"-",paraId:3,tocIndex:19},{value:"overflowCount",paraId:3,tocIndex:19},{value:"Max count to show",paraId:3,tocIndex:19},{value:"number",paraId:3,tocIndex:19},{value:"99",paraId:3,tocIndex:19},{value:"showZero",paraId:3,tocIndex:19},{value:"Whether to show badge when ",paraId:3,tocIndex:19},{value:"count",paraId:3,tocIndex:19},{value:" is zero",paraId:3,tocIndex:19},{value:"boolean",paraId:3,tocIndex:19},{value:"false",paraId:3,tocIndex:19},{value:"size",paraId:3,tocIndex:19},{value:"If ",paraId:3,tocIndex:19},{value:"count",paraId:3,tocIndex:19},{value:" is set, ",paraId:3,tocIndex:19},{value:"size",paraId:3,tocIndex:19},{value:" sets the size of badge",paraId:3,tocIndex:19},{value:"default",paraId:3,tocIndex:19},{value:" | ",paraId:3,tocIndex:19},{value:"small",paraId:3,tocIndex:19},{value:"-",paraId:3,tocIndex:19},{value:"-",paraId:3,tocIndex:19},{value:"status",paraId:3,tocIndex:19},{value:"Set Badge as a status dot",paraId:3,tocIndex:19},{value:"success",paraId:3,tocIndex:19},{value:" | ",paraId:3,tocIndex:19},{value:"processing",paraId:3,tocIndex:19},{value:" | ",paraId:3,tocIndex:19},{value:"default",paraId:3,tocIndex:19},{value:" | ",paraId:3,tocIndex:19},{value:"error",paraId:3,tocIndex:19},{value:" | ",paraId:3,tocIndex:19},{value:"warning",paraId:3,tocIndex:19},{value:"-",paraId:3,tocIndex:19},{value:"styles",paraId:3,tocIndex:19},{value:"Semantic DOM style",paraId:3,tocIndex:19},{value:"Record<SemanticDOM, CSSProperties>",paraId:5,tocIndex:19},{value:"-",paraId:3,tocIndex:19},{value:"5.7.0",paraId:3,tocIndex:19},{value:"text",paraId:3,tocIndex:19},{value:"If ",paraId:3,tocIndex:19},{value:"status",paraId:3,tocIndex:19},{value:" is set, ",paraId:3,tocIndex:19},{value:"text",paraId:3,tocIndex:19},{value:" sets the display text of the status ",paraId:3,tocIndex:19},{value:"dot",paraId:3,tocIndex:19},{value:"ReactNode",paraId:3,tocIndex:19},{value:"-",paraId:3,tocIndex:19},{value:"title",paraId:3,tocIndex:19},{value:"Text to show when hovering over the badge",paraId:3,tocIndex:19},{value:"string",paraId:3,tocIndex:19},{value:"-",paraId:3,tocIndex:19},{value:"Property",paraId:6,tocIndex:20},{value:"Description",paraId:6,tocIndex:20},{value:"Type",paraId:6,tocIndex:20},{value:"Default",paraId:6,tocIndex:20},{value:"Version",paraId:6,tocIndex:20},{value:"color",paraId:6,tocIndex:20},{value:"Customize Ribbon color",paraId:6,tocIndex:20},{value:"string",paraId:6,tocIndex:20},{value:"-",paraId:6,tocIndex:20},{value:"placement",paraId:6,tocIndex:20},{value:"The placement of the Ribbon, ",paraId:6,tocIndex:20},{value:"start",paraId:6,tocIndex:20},{value:" and ",paraId:6,tocIndex:20},{value:"end",paraId:6,tocIndex:20},{value:" follow text direction (RTL or LTR)",paraId:6,tocIndex:20},{value:"start",paraId:6,tocIndex:20},{value:" | ",paraId:6,tocIndex:20},{value:"end",paraId:6,tocIndex:20},{value:"end",paraId:6,tocIndex:20},{value:"text",paraId:6,tocIndex:20},{value:"Content inside the Ribbon",paraId:6,tocIndex:20},{value:"ReactNode",paraId:6,tocIndex:20},{value:"-",paraId:6,tocIndex:20}];}}]);