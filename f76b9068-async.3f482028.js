(("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd=("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd||[]).push([["f76b9068"],{f76b9068:function(a,e,d){"use strict";d.d(e,"__esModule",{value:!0}),d.d(e,"texts",{enumerable:!0,get:function(){return o;}}),d("32c64bd2");let o=[{value:"Used when the user needs to make a customized color selection.",paraId:0,tocIndex:0},{value:"Common props ref\uFF1A",paraId:1,tocIndex:16},{value:"Common props",paraId:2,tocIndex:16},{value:"This component is available since ",paraId:3,tocIndex:16},{value:"antd@5.5.0",paraId:3,tocIndex:16},{value:".",paraId:3,tocIndex:16},{value:"Property",paraId:4,tocIndex:16},{value:"Description",paraId:4,tocIndex:16},{value:"Type",paraId:4,tocIndex:16},{value:"Default",paraId:4,tocIndex:16},{value:"Version",paraId:4,tocIndex:16},{value:"allowClear",paraId:4,tocIndex:16},{value:"Allow clearing color selected",paraId:4,tocIndex:16},{value:"boolean",paraId:4,tocIndex:16},{value:"false",paraId:4,tocIndex:16},{value:"arrow",paraId:4,tocIndex:16},{value:"Configuration for popup arrow",paraId:4,tocIndex:16},{value:"boolean | { pointAtCenter: boolean }",paraId:4,tocIndex:16},{value:"true",paraId:4,tocIndex:16},{value:"children",paraId:4,tocIndex:16},{value:"Trigger of ColorPicker",paraId:4,tocIndex:16},{value:"React.ReactNode",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"defaultValue",paraId:4,tocIndex:16},{value:"Default value of color",paraId:4,tocIndex:16},{value:"string | ",paraId:4,tocIndex:16},{value:"Color",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"defaultFormat",paraId:4,tocIndex:16},{value:"Default format of color",paraId:4,tocIndex:16},{value:"rgb",paraId:4,tocIndex:16},{value:" | ",paraId:4,tocIndex:16},{value:"hex",paraId:4,tocIndex:16},{value:" | ",paraId:4,tocIndex:16},{value:"hsb",paraId:4,tocIndex:16},{value:"hex",paraId:4,tocIndex:16},{value:"5.9.0",paraId:4,tocIndex:16},{value:"disabled",paraId:4,tocIndex:16},{value:"Disable ColorPicker",paraId:4,tocIndex:16},{value:"boolean",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"disabledAlpha",paraId:4,tocIndex:16},{value:"Disable Alpha",paraId:4,tocIndex:16},{value:"boolean",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"5.8.0",paraId:4,tocIndex:16},{value:"disabledFormat",paraId:4,tocIndex:16},{value:"Disable format of color",paraId:4,tocIndex:16},{value:"boolean",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"destroyTooltipOnHide",paraId:4,tocIndex:16},{value:"Whether destroy dom when close",paraId:4,tocIndex:16},{value:"boolean",paraId:4,tocIndex:16},{value:"false",paraId:4,tocIndex:16},{value:"5.7.0",paraId:4,tocIndex:16},{value:"destroyOnHidden",paraId:4,tocIndex:16},{value:"Whether destroy dom when close",paraId:4,tocIndex:16},{value:"boolean",paraId:4,tocIndex:16},{value:"false",paraId:4,tocIndex:16},{value:"5.25.0",paraId:4,tocIndex:16},{value:"format",paraId:4,tocIndex:16},{value:"Format of color",paraId:4,tocIndex:16},{value:"rgb",paraId:4,tocIndex:16},{value:" | ",paraId:4,tocIndex:16},{value:"hex",paraId:4,tocIndex:16},{value:" | ",paraId:4,tocIndex:16},{value:"hsb",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"mode",paraId:4,tocIndex:16},{value:"Configure single or gradient color",paraId:4,tocIndex:16},{value:"'single' | 'gradient' | ('single' | 'gradient')[]",paraId:4,tocIndex:16},{value:"single",paraId:4,tocIndex:16},{value:"5.20.0",paraId:4,tocIndex:16},{value:"open",paraId:4,tocIndex:16},{value:"Whether to show popup",paraId:4,tocIndex:16},{value:"boolean",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"presets",paraId:4,tocIndex:16},{value:"Preset colors",paraId:4,tocIndex:16},{value:"{ label: ReactNode, colors: Array<string | Color>, defaultOpen?: boolean, key?: React.Key }[]",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"defaultOpen: 5.11.0, key: 5.23.0",paraId:4,tocIndex:16},{value:"placement",paraId:4,tocIndex:16},{value:"Placement of popup",paraId:4,tocIndex:16},{value:"The design of the ",paraId:4,tocIndex:16},{value:"placement",paraId:5,tocIndex:16},{value:" parameter is the same as the ",paraId:4,tocIndex:16},{value:"Tooltips",paraId:4,tocIndex:16},{value:" component.",paraId:4,tocIndex:16},{value:"bottomLeft",paraId:4,tocIndex:16},{value:"panelRender",paraId:4,tocIndex:16},{value:"Custom Render Panel",paraId:4,tocIndex:16},{value:"(panel: React.ReactNode, extra: { components: { Picker: FC; Presets: FC } }) => React.ReactNode",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"5.7.0",paraId:4,tocIndex:16},{value:"showText",paraId:4,tocIndex:16},{value:"Show color text",paraId:4,tocIndex:16},{value:"boolean | ",paraId:4,tocIndex:16},{value:"(color: Color) => React.ReactNode",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"5.7.0",paraId:4,tocIndex:16},{value:"size",paraId:4,tocIndex:16},{value:"Setting the trigger size",paraId:4,tocIndex:16},{value:"large",paraId:4,tocIndex:16},{value:" | ",paraId:4,tocIndex:16},{value:"middle",paraId:4,tocIndex:16},{value:" | ",paraId:4,tocIndex:16},{value:"small",paraId:4,tocIndex:16},{value:"middle",paraId:4,tocIndex:16},{value:"5.7.0",paraId:4,tocIndex:16},{value:"trigger",paraId:4,tocIndex:16},{value:"ColorPicker trigger mode",paraId:4,tocIndex:16},{value:"hover",paraId:4,tocIndex:16},{value:" | ",paraId:4,tocIndex:16},{value:"click",paraId:4,tocIndex:16},{value:"click",paraId:4,tocIndex:16},{value:"value",paraId:4,tocIndex:16},{value:"Value of color",paraId:4,tocIndex:16},{value:"string | ",paraId:4,tocIndex:16},{value:"Color",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"onChange",paraId:4,tocIndex:16},{value:"Callback when ",paraId:4,tocIndex:16},{value:"value",paraId:4,tocIndex:16},{value:" is changed",paraId:4,tocIndex:16},{value:"(value: Color, css: string) => void",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"onChangeComplete",paraId:4,tocIndex:16},{value:"Called when color pick ends. Will not change the display color when ",paraId:4,tocIndex:16},{value:"value",paraId:4,tocIndex:16},{value:" controlled by ",paraId:4,tocIndex:16},{value:"onChangeComplete",paraId:4,tocIndex:16},{value:"(value: Color) => void",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"5.7.0",paraId:4,tocIndex:16},{value:"onFormatChange",paraId:4,tocIndex:16},{value:"Callback when ",paraId:4,tocIndex:16},{value:"format",paraId:4,tocIndex:16},{value:" is changed",paraId:4,tocIndex:16},{value:"(format: 'hex' | 'rgb' | 'hsb') => void",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"onOpenChange",paraId:4,tocIndex:16},{value:"Callback when ",paraId:4,tocIndex:16},{value:"open",paraId:4,tocIndex:16},{value:" is changed",paraId:4,tocIndex:16},{value:"(open: boolean) => void",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"onClear",paraId:4,tocIndex:16},{value:"Called when clear",paraId:4,tocIndex:16},{value:"() => void",paraId:4,tocIndex:16},{value:"-",paraId:4,tocIndex:16},{value:"5.6.0",paraId:4,tocIndex:16},{value:"Property",paraId:6,tocIndex:17},{value:"Description",paraId:6,tocIndex:17},{value:"Type",paraId:6,tocIndex:17},{value:"Version",paraId:6,tocIndex:17},{value:"toCssString",paraId:6,tocIndex:17},{value:"Convert to CSS support format",paraId:6,tocIndex:17},{value:"() => string",paraId:6,tocIndex:17},{value:"5.20.0",paraId:6,tocIndex:17},{value:"toHex",paraId:6,tocIndex:17},{value:"Convert to ",paraId:6,tocIndex:17},{value:"hex",paraId:6,tocIndex:17},{value:" format characters, the return type like: ",paraId:6,tocIndex:17},{value:"1677ff",paraId:6,tocIndex:17},{value:"() => string",paraId:6,tocIndex:17},{value:"-",paraId:6,tocIndex:17},{value:"toHexString",paraId:6,tocIndex:17},{value:"Convert to ",paraId:6,tocIndex:17},{value:"hex",paraId:6,tocIndex:17},{value:" format color string, the return type like: ",paraId:6,tocIndex:17},{value:"#1677ff",paraId:6,tocIndex:17},{value:"() => string",paraId:6,tocIndex:17},{value:"-",paraId:6,tocIndex:17},{value:"toHsb",paraId:6,tocIndex:17},{value:"Convert to ",paraId:6,tocIndex:17},{value:"hsb",paraId:6,tocIndex:17},{value:" object",paraId:6,tocIndex:17},{value:"() => ({ h: number, s: number, b: number, a number })",paraId:6,tocIndex:17},{value:"-",paraId:6,tocIndex:17},{value:"toHsbString",paraId:6,tocIndex:17},{value:"Convert to ",paraId:6,tocIndex:17},{value:"hsb",paraId:6,tocIndex:17},{value:" format color string, the return type like: ",paraId:6,tocIndex:17},{value:"hsb(215, 91%, 100%)",paraId:6,tocIndex:17},{value:"() => string",paraId:6,tocIndex:17},{value:"-",paraId:6,tocIndex:17},{value:"toRgb",paraId:6,tocIndex:17},{value:"Convert to ",paraId:6,tocIndex:17},{value:"rgb",paraId:6,tocIndex:17},{value:" object",paraId:6,tocIndex:17},{value:"() => ({ r: number, g: number, b: number, a number })",paraId:6,tocIndex:17},{value:"-",paraId:6,tocIndex:17},{value:"toRgbString",paraId:6,tocIndex:17},{value:"Convert to ",paraId:6,tocIndex:17},{value:"rgb",paraId:6,tocIndex:17},{value:" format color string, the return type like: ",paraId:6,tocIndex:17},{value:"rgb(22, 119, 255)",paraId:6,tocIndex:17},{value:"() => string",paraId:6,tocIndex:17},{value:"-",paraId:6,tocIndex:17},{value:"The value of the color selector supports both string color values and selector-generated ",paraId:7,tocIndex:19},{value:"Color",paraId:7,tocIndex:19},{value:" objects. However, since there is a precision error when converting color strings of different formats to each other, it is recommended to use selector-generated ",paraId:7,tocIndex:19},{value:"Color",paraId:7,tocIndex:19},{value:" objects for assignment operations in controlled scenarios, so that the precision problem can be avoided and the values are guaranteed to be accurate and the selector can work as expected.",paraId:7,tocIndex:19}];}}]);