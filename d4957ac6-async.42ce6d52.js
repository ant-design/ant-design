(("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd=("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd||[]).push([["d4957ac6"],{d4957ac6:function(e,a,d){"use strict";d.d(a,"__esModule",{value:!0}),d.d(a,"texts",{enumerable:!0,get:function(){return t;}}),d("c1079116");let t=[{value:"Used for selecting multiple values from several options.",paraId:0,tocIndex:0},{value:"If you use only one checkbox, it is the same as using Switch to toggle between two states. The difference is that Switch will trigger the state change directly, but Checkbox just marks the state as changed and this needs to be submitted.",paraId:0,tocIndex:0},{value:"Common props ref\uFF1A",paraId:1,tocIndex:11},{value:"Common props",paraId:2,tocIndex:11},{value:"Property",paraId:3,tocIndex:12},{value:"Description",paraId:3,tocIndex:12},{value:"Type",paraId:3,tocIndex:12},{value:"Default",paraId:3,tocIndex:12},{value:"Version",paraId:3,tocIndex:12},{value:"autoFocus",paraId:3,tocIndex:12},{value:"If get focus when component mounted",paraId:3,tocIndex:12},{value:"boolean",paraId:3,tocIndex:12},{value:"false",paraId:3,tocIndex:12},{value:"checked",paraId:3,tocIndex:12},{value:"Specifies whether the checkbox is selected",paraId:3,tocIndex:12},{value:"boolean",paraId:3,tocIndex:12},{value:"false",paraId:3,tocIndex:12},{value:"defaultChecked",paraId:3,tocIndex:12},{value:"Specifies the initial state: whether or not the checkbox is selected",paraId:3,tocIndex:12},{value:"boolean",paraId:3,tocIndex:12},{value:"false",paraId:3,tocIndex:12},{value:"disabled",paraId:3,tocIndex:12},{value:"If disable checkbox",paraId:3,tocIndex:12},{value:"boolean",paraId:3,tocIndex:12},{value:"false",paraId:3,tocIndex:12},{value:"indeterminate",paraId:3,tocIndex:12},{value:"The indeterminate checked state of checkbox",paraId:3,tocIndex:12},{value:"boolean",paraId:3,tocIndex:12},{value:"false",paraId:3,tocIndex:12},{value:"onChange",paraId:3,tocIndex:12},{value:"The callback function that is triggered when the state changes",paraId:3,tocIndex:12},{value:"(e: CheckboxChangeEvent) => void",paraId:3,tocIndex:12},{value:"-",paraId:3,tocIndex:12},{value:"onBlur",paraId:3,tocIndex:12},{value:"Called when leaving the component",paraId:3,tocIndex:12},{value:"function()",paraId:3,tocIndex:12},{value:"-",paraId:3,tocIndex:12},{value:"onFocus",paraId:3,tocIndex:12},{value:"Called when entering the component",paraId:3,tocIndex:12},{value:"function()",paraId:3,tocIndex:12},{value:"-",paraId:3,tocIndex:12},{value:"Property",paraId:4,tocIndex:13},{value:"Description",paraId:4,tocIndex:13},{value:"Type",paraId:4,tocIndex:13},{value:"Default",paraId:4,tocIndex:13},{value:"Version",paraId:4,tocIndex:13},{value:"defaultValue",paraId:4,tocIndex:13},{value:"Default selected value",paraId:4,tocIndex:13},{value:"(string | number)[]",paraId:4,tocIndex:13},{value:"[]",paraId:4,tocIndex:13},{value:"disabled",paraId:4,tocIndex:13},{value:"If disable all checkboxes",paraId:4,tocIndex:13},{value:"boolean",paraId:4,tocIndex:13},{value:"false",paraId:4,tocIndex:13},{value:"name",paraId:4,tocIndex:13},{value:"The ",paraId:4,tocIndex:13},{value:"name",paraId:4,tocIndex:13},{value:" property of all ",paraId:4,tocIndex:13},{value:'input[type="checkbox"]',paraId:4,tocIndex:13},{value:" children",paraId:4,tocIndex:13},{value:"string",paraId:4,tocIndex:13},{value:"-",paraId:4,tocIndex:13},{value:"options",paraId:4,tocIndex:13},{value:"Specifies options",paraId:4,tocIndex:13},{value:"string[] | number[] | Option[]",paraId:4,tocIndex:13},{value:"[]",paraId:4,tocIndex:13},{value:"value",paraId:4,tocIndex:13},{value:"Used for setting the currently selected value",paraId:4,tocIndex:13},{value:"(string | number | boolean)[]",paraId:4,tocIndex:13},{value:"[]",paraId:4,tocIndex:13},{value:"title",paraId:4,tocIndex:13},{value:"title of the option",paraId:4,tocIndex:13},{value:"string",paraId:4,tocIndex:13},{value:"-",paraId:4,tocIndex:13},{value:"className",paraId:4,tocIndex:13},{value:"className of the option",paraId:4,tocIndex:13},{value:"string",paraId:4,tocIndex:13},{value:"-",paraId:4,tocIndex:13},{value:"5.25.0",paraId:4,tocIndex:13},{value:"style",paraId:4,tocIndex:13},{value:"styles of the option",paraId:4,tocIndex:13},{value:"React.CSSProperties",paraId:4,tocIndex:13},{value:"-",paraId:4,tocIndex:13},{value:"onChange",paraId:4,tocIndex:13},{value:"The callback function that is triggered when the state changes",paraId:4,tocIndex:13},{value:"(checkedValue: T[]) => void",paraId:4,tocIndex:13},{value:"-",paraId:4,tocIndex:13},{value:"interface Option {\n  label: string;\n  value: string;\n  disabled?: boolean;\n}\n",paraId:5,tocIndex:14},{value:"Name",paraId:6,tocIndex:16},{value:"Description",paraId:6,tocIndex:16},{value:"Version",paraId:6,tocIndex:16},{value:"blur()",paraId:6,tocIndex:16},{value:"Remove focus",paraId:6,tocIndex:16},{value:"focus()",paraId:6,tocIndex:16},{value:"Get focus",paraId:6,tocIndex:16},{value:"nativeElement",paraId:6,tocIndex:16},{value:"Returns the DOM node of the Checkbox",paraId:6,tocIndex:16},{value:"5.17.3",paraId:6,tocIndex:16},{value:"Form.Item default bind value to ",paraId:7,tocIndex:19},{value:"value",paraId:7,tocIndex:19},{value:" property, but Checkbox value property is ",paraId:7,tocIndex:19},{value:"checked",paraId:7,tocIndex:19},{value:". You can use ",paraId:7,tocIndex:19},{value:"valuePropName",paraId:7,tocIndex:19},{value:" to change bind property.",paraId:7,tocIndex:19},{value:'<Form.Item name="fieldA" valuePropName="checked">\n  <Checkbox />\n</Form.Item>\n',paraId:8,tocIndex:19}];}}]);