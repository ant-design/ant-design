(("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd=("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd||[]).push([["c4b74161"],{c4b74161:function(e,t,n){"use strict";var o=n("852bbaa9")._;n.d(t,"__esModule",{value:!0}),n.d(t,"demos",{enumerable:!0,get:function(){return r;}});var i=n("852bbaa9"),a=i._(n("5b220c3d"));n("00630bea");var d=i._(n("e22febe0")),s=i._(n("a9d1a279"));let r={"notification-demo-hooks":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"0b831b5b"))))),asset:{type:"BLOCK",id:"notification-demo-hooks",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("4eebd428").default},react:{type:"NPM",value:"19.2.0"},"@ant-design/icons":{type:"NPM",value:"5.6.1"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"Hooks usage (recommended)",description:"Use notification.useNotification to get contextHolder with context accessible issue. Please note that, we recommend to use top level registration instead of notification static method, because static method cannot consume context, and ConfigProvider data will not work."},context:{react:a,"@ant-design/icons":d,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}},"notification-demo-duration":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"85bb6b55"))))),asset:{type:"BLOCK",id:"notification-demo-duration",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("985296cb").default},react:{type:"NPM",value:"19.2.0"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"Duration after which the notification box is closed",description:"Duration can be used to specify how long the notification stays open. After the duration time elapses, the notification closes automatically. If not specified, default value is 4.5 seconds. If you set the value to 0, the notification box will never close automatically."},context:{react:a,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}},"notification-demo-with-icon":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"1f0ed5a8"))))),asset:{type:"BLOCK",id:"notification-demo-with-icon",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("5f7f04f3").default},react:{type:"NPM",value:"19.2.0"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"Notification with icon",description:"A notification box with a icon at the left side."},context:{react:a,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}},"notification-demo-with-btn":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"de38a927"))))),asset:{type:"BLOCK",id:"notification-demo-with-btn",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("77ef6ed5").default},react:{type:"NPM",value:"19.2.0"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"Custom close button",description:"To customize the style or font of the close button."},context:{react:a,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}},"notification-demo-custom-icon":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"2d657de6"))))),asset:{type:"BLOCK",id:"notification-demo-custom-icon",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("9d635506").default},react:{type:"NPM",value:"19.2.0"},"@ant-design/icons":{type:"NPM",value:"5.6.1"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"Customized Icon",description:"The icon can be customized to any react node."},context:{react:a,"@ant-design/icons":d,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}},"notification-demo-placement":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"3857ca13"))))),asset:{type:"BLOCK",id:"notification-demo-placement",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("40eabc73").default},react:{type:"NPM",value:"19.2.0"},"@ant-design/icons":{type:"NPM",value:"5.6.1"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"Placement",description:"A notification box can appear from the top bottom topLeft topRight bottomLeft or bottomRight of the viewport via placement."},context:{react:a,"@ant-design/icons":d,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}},"notification-demo-custom-style":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"c77438d7"))))),asset:{type:"BLOCK",id:"notification-demo-custom-style",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("0ee39561").default},react:{type:"NPM",value:"19.2.0"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"Customized style",description:"The style and className are available to customize Notification."},context:{react:a,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}},"notification-demo-update":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"66e4439b"))))),asset:{type:"BLOCK",id:"notification-demo-update",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("8a07c3a8").default},react:{type:"NPM",value:"19.2.0"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"Update Message Content",description:"Update content with unique key."},context:{react:a,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}},"notification-demo-stack":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"7967a7dc"))))),asset:{type:"BLOCK",id:"notification-demo-stack",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("5d938257").default},react:{type:"NPM",value:"19.2.0"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"Stack",description:"Stack configuration, enabled by default. More than 3 notifications will be automatically stacked, and could be changed by threshold."},context:{react:a,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}},"notification-demo-show-with-progress":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"4cced71f"))))),asset:{type:"BLOCK",id:"notification-demo-show-with-progress",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("dfeda5a6").default},react:{type:"NPM",value:"19.2.0"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"Show with progress",description:"Show progress bar for auto-closing notification."},context:{react:a,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}},"notification-demo-basic":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"4eb8ed34"))))),asset:{type:"BLOCK",id:"notification-demo-basic",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("f02b525f").default},react:{type:"NPM",value:"19.2.0"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"Static Method (deprecated)",description:"Static methods cannot consume Context provided by ConfigProvider. When enable layer, they may also cause style errors. Please use hooks version or App provided instance first."},context:{react:a,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}},"notification-demo-component-token":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"ce95198e"))))),asset:{type:"BLOCK",id:"notification-demo-component-token",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("21ab0f8c").default},react:{type:"NPM",value:"19.2.0"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"Component Token",description:"Demonstrates the new component token functionality that supports different background colors for different notification types. You can customize the background colors using colorSuccessBg, colorErrorBg, colorInfoBg, and colorWarningBg tokens."},context:{react:a,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}},"notification-demo-render-panel":{component:a.default.memo(a.default.lazy(()=>Promise.all([n.ensure("common"),n.ensure("d559fb74")]).then(n.dr(o,n.bind(n,"0aed1fc2"))))),asset:{type:"BLOCK",id:"notification-demo-render-panel",refAtomIds:["notification"],dependencies:{"index.tsx":{type:"FILE",value:n("5f7b8dcd").default},react:{type:"NPM",value:"19.2.0"},antd:{type:"NPM",value:"5.28.0"}},entry:"index.tsx",title:"_InternalPanelDoNotUseOrYouWillBeFired",description:"Debug usage. Do not use in your production."},context:{react:a,antd:s},renderOpts:{compile:async(...e)=>(await Promise.all([n.ensure("vendors_0"),n.ensure("vendors_1"),n.ensure("d2b37e0b")]).then(n.dr(o,n.bind(n,"d2b37e0b")))).default(...e)}}};}}]);