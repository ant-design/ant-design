(("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd=("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd||[]).push([["63051d05"],{"63051d05":function(e,a,d){"use strict";d.d(a,"__esModule",{value:!0}),d.d(a,"texts",{enumerable:!0,get:function(){return t;}}),d("cce77d0d");let t=[{value:"TreeSelect",paraId:0,tocIndex:0},{value:" is similar to ",paraId:0,tocIndex:0},{value:"Select",paraId:0,tocIndex:0},{value:", but the values are provided in a tree like structure. Any data whose entries are defined in a hierarchical manner is fit to use this control. Examples of such case may include a corporate hierarchy, a directory structure, and so on.",paraId:0,tocIndex:0},{value:"Common props ref\uFF1A",paraId:1,tocIndex:15},{value:"Common props",paraId:2,tocIndex:15},{value:"Property",paraId:3,tocIndex:16},{value:"Description",paraId:3,tocIndex:16},{value:"Type",paraId:3,tocIndex:16},{value:"Default",paraId:3,tocIndex:16},{value:"Version",paraId:3,tocIndex:16},{value:"allowClear",paraId:3,tocIndex:16},{value:"Customize clear icon",paraId:3,tocIndex:16},{value:"boolean | { clearIcon?: ReactNode }",paraId:3,tocIndex:16},{value:"false",paraId:3,tocIndex:16},{value:"5.8.0: Support object type",paraId:3,tocIndex:16},{value:"autoClearSearchValue",paraId:3,tocIndex:16},{value:"If auto clear search input value when multiple select is selected/deselected",paraId:3,tocIndex:16},{value:"boolean",paraId:3,tocIndex:16},{value:"true",paraId:3,tocIndex:16},{value:"classNames",paraId:3,tocIndex:16},{value:"Semantic DOM class",paraId:3,tocIndex:16},{value:"Record<SemanticDOM, string>",paraId:4,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"5.25.0",paraId:3,tocIndex:16},{value:"defaultOpen",paraId:3,tocIndex:16},{value:"Initial open state of dropdown",paraId:3,tocIndex:16},{value:"boolean",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"defaultValue",paraId:3,tocIndex:16},{value:"To set the initial selected treeNode(s)",paraId:3,tocIndex:16},{value:"string | string[]",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"disabled",paraId:3,tocIndex:16},{value:"Disabled or not",paraId:3,tocIndex:16},{value:"boolean",paraId:3,tocIndex:16},{value:"false",paraId:3,tocIndex:16},{value:"popupClassName",paraId:3,tocIndex:16},{value:"The className of dropdown menu, use ",paraId:3,tocIndex:16},{value:"classNames.popup.root",paraId:3,tocIndex:16},{value:" instead",paraId:3,tocIndex:16},{value:"string",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"4.23.0",paraId:3,tocIndex:16},{value:"popupMatchSelectWidth",paraId:3,tocIndex:16},{value:"Determine whether the popup menu and the select input are the same width. Default set ",paraId:3,tocIndex:16},{value:"min-width",paraId:3,tocIndex:16},{value:" same as input. Will ignore when value less than select width. ",paraId:3,tocIndex:16},{value:"false",paraId:3,tocIndex:16},{value:" will disable virtual scroll",paraId:3,tocIndex:16},{value:"boolean | number",paraId:3,tocIndex:16},{value:"true",paraId:3,tocIndex:16},{value:"5.5.0",paraId:3,tocIndex:16},{value:"dropdownRender",paraId:3,tocIndex:16},{value:"Customize dropdown content, use ",paraId:3,tocIndex:16},{value:"popupRender",paraId:3,tocIndex:16},{value:" instead",paraId:3,tocIndex:16},{value:"(originNode: ReactNode, props) => ReactNode",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"popupRender",paraId:3,tocIndex:16},{value:"Customize dropdown content",paraId:3,tocIndex:16},{value:"(originNode: ReactNode, props) => ReactNode",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"dropdownStyle",paraId:3,tocIndex:16},{value:"To set the style of the dropdown menu, use ",paraId:3,tocIndex:16},{value:"styles.popup.root",paraId:3,tocIndex:16},{value:" instead",paraId:3,tocIndex:16},{value:"CSSProperties",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"fieldNames",paraId:3,tocIndex:16},{value:"Customize node label, value, children field name",paraId:3,tocIndex:16},{value:"object",paraId:3,tocIndex:16},{value:"{ label: ",paraId:3,tocIndex:16},{value:"label",paraId:3,tocIndex:16},{value:", value: ",paraId:3,tocIndex:16},{value:"value",paraId:3,tocIndex:16},{value:", children: ",paraId:3,tocIndex:16},{value:"children",paraId:3,tocIndex:16},{value:" }",paraId:3,tocIndex:16},{value:"4.17.0",paraId:3,tocIndex:16},{value:"filterTreeNode",paraId:3,tocIndex:16},{value:"Whether to filter treeNodes by input value. The value of ",paraId:3,tocIndex:16},{value:"treeNodeFilterProp",paraId:3,tocIndex:16},{value:" is used for filtering by default",paraId:3,tocIndex:16},{value:"boolean | function(inputValue: string, treeNode: TreeNode) (should return boolean)",paraId:3,tocIndex:16},{value:"function",paraId:3,tocIndex:16},{value:"getPopupContainer",paraId:3,tocIndex:16},{value:"To set the container of the dropdown menu. The default is to create a ",paraId:3,tocIndex:16},{value:"div",paraId:3,tocIndex:16},{value:" element in ",paraId:3,tocIndex:16},{value:"body",paraId:3,tocIndex:16},{value:", you can reset it to the scrolling area and make a relative reposition. ",paraId:3,tocIndex:16},{value:"example",paraId:3,tocIndex:16},{value:"function(triggerNode)",paraId:3,tocIndex:16},{value:"() => document.body",paraId:3,tocIndex:16},{value:"labelInValue",paraId:3,tocIndex:16},{value:"Whether to embed label in value, turn the format of value from ",paraId:3,tocIndex:16},{value:"string",paraId:3,tocIndex:16},{value:" to {value: string, label: ReactNode, halfChecked: boolean (Is the option list in a semi selected state and not displayed in the values)}",paraId:3,tocIndex:16},{value:"boolean",paraId:3,tocIndex:16},{value:"false",paraId:3,tocIndex:16},{value:"listHeight",paraId:3,tocIndex:16},{value:"Config popup height",paraId:3,tocIndex:16},{value:"number",paraId:3,tocIndex:16},{value:"256",paraId:3,tocIndex:16},{value:"loadData",paraId:3,tocIndex:16},{value:"Load data asynchronously. Will not load when filtering. Check FAQ for more info",paraId:3,tocIndex:16},{value:"function(node)",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"maxTagCount",paraId:3,tocIndex:16},{value:"Max tag count to show. ",paraId:3,tocIndex:16},{value:"responsive",paraId:3,tocIndex:16},{value:" will cost render performance",paraId:3,tocIndex:16},{value:"number | ",paraId:3,tocIndex:16},{value:"responsive",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"responsive: 4.10",paraId:3,tocIndex:16},{value:"maxCount",paraId:3,tocIndex:16},{value:"The maximum number of items that can be selected. Only takes effect when ",paraId:3,tocIndex:16},{value:"multiple=true",paraId:3,tocIndex:16},{value:". If (",paraId:3,tocIndex:16},{value:"showCheckedStrategy = 'SHOW_ALL'",paraId:3,tocIndex:16},{value:" and ",paraId:3,tocIndex:16},{value:"treeCheckStrictly",paraId:3,tocIndex:16},{value:" is disabled) or ",paraId:3,tocIndex:16},{value:"showCheckedStrategy = 'SHOW_PARENT'",paraId:3,tocIndex:16},{value:" is used, ",paraId:3,tocIndex:16},{value:"maxCount",paraId:3,tocIndex:16},{value:" will not take effect.",paraId:3,tocIndex:16},{value:"number",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"5.23.0",paraId:3,tocIndex:16},{value:"maxTagPlaceholder",paraId:3,tocIndex:16},{value:"Placeholder for not showing tags",paraId:3,tocIndex:16},{value:"ReactNode | function(omittedValues)",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"maxTagTextLength",paraId:3,tocIndex:16},{value:"Max tag text length to show",paraId:3,tocIndex:16},{value:"number",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"multiple",paraId:3,tocIndex:16},{value:"Support multiple or not, will be ",paraId:3,tocIndex:16},{value:"true",paraId:3,tocIndex:16},{value:" when enable ",paraId:3,tocIndex:16},{value:"treeCheckable",paraId:3,tocIndex:16},{value:"boolean",paraId:3,tocIndex:16},{value:"false",paraId:3,tocIndex:16},{value:"notFoundContent",paraId:3,tocIndex:16},{value:"Specify content to show when no result matches",paraId:3,tocIndex:16},{value:"ReactNode",paraId:3,tocIndex:16},{value:"Not Found",paraId:3,tocIndex:16},{value:"open",paraId:3,tocIndex:16},{value:"Controlled open state of dropdown",paraId:3,tocIndex:16},{value:"boolean",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"placeholder",paraId:3,tocIndex:16},{value:"Placeholder of the select input",paraId:3,tocIndex:16},{value:"string",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"placement",paraId:3,tocIndex:16},{value:"The position where the selection box pops up",paraId:3,tocIndex:16},{value:"bottomLeft",paraId:3,tocIndex:16},{value:" ",paraId:3,tocIndex:16},{value:"bottomRight",paraId:3,tocIndex:16},{value:" ",paraId:3,tocIndex:16},{value:"topLeft",paraId:3,tocIndex:16},{value:" ",paraId:3,tocIndex:16},{value:"topRight",paraId:3,tocIndex:16},{value:"bottomLeft",paraId:3,tocIndex:16},{value:"prefix",paraId:3,tocIndex:16},{value:"The custom prefix",paraId:3,tocIndex:16},{value:"ReactNode",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"5.22.0",paraId:3,tocIndex:16},{value:"searchValue",paraId:3,tocIndex:16},{value:"Work with ",paraId:3,tocIndex:16},{value:"onSearch",paraId:3,tocIndex:16},{value:" to make search value controlled",paraId:3,tocIndex:16},{value:"string",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"showCheckedStrategy",paraId:3,tocIndex:16},{value:"The way show selected item in box when ",paraId:3,tocIndex:16},{value:"treeCheckable",paraId:3,tocIndex:16},{value:" set. ",paraId:3,tocIndex:16},{value:"Default:",paraId:3,tocIndex:16},{value:" just show child nodes. ",paraId:3,tocIndex:16},{value:"TreeSelect.SHOW_ALL",paraId:3,tocIndex:16},{value:":",paraId:3,tocIndex:16},{value:" show all checked treeNodes (include parent treeNode). ",paraId:3,tocIndex:16},{value:"TreeSelect.SHOW_PARENT",paraId:3,tocIndex:16},{value:":",paraId:3,tocIndex:16},{value:" show checked treeNodes (just show parent treeNode)",paraId:3,tocIndex:16},{value:"TreeSelect.SHOW_ALL",paraId:3,tocIndex:16},{value:" | ",paraId:3,tocIndex:16},{value:"TreeSelect.SHOW_PARENT",paraId:3,tocIndex:16},{value:" | ",paraId:3,tocIndex:16},{value:"TreeSelect.SHOW_CHILD",paraId:3,tocIndex:16},{value:"TreeSelect.SHOW_CHILD",paraId:3,tocIndex:16},{value:"showSearch",paraId:3,tocIndex:16},{value:"Support search or not",paraId:3,tocIndex:16},{value:"boolean",paraId:3,tocIndex:16},{value:"single: false | multiple: true",paraId:3,tocIndex:16},{value:"size",paraId:3,tocIndex:16},{value:"To set the size of the select input",paraId:3,tocIndex:16},{value:"large",paraId:3,tocIndex:16},{value:" | ",paraId:3,tocIndex:16},{value:"middle",paraId:3,tocIndex:16},{value:" | ",paraId:3,tocIndex:16},{value:"small",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"status",paraId:3,tocIndex:16},{value:"Set validation status",paraId:3,tocIndex:16},{value:"'error' | 'warning'",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"4.19.0",paraId:3,tocIndex:16},{value:"suffixIcon",paraId:3,tocIndex:16},{value:"The custom suffix icon",paraId:3,tocIndex:16},{value:"ReactNode",paraId:3,tocIndex:16},{value:"<DownOutlined />",paraId:3,tocIndex:16},{value:"switcherIcon",paraId:3,tocIndex:16},{value:"Customize collapse/expand icon of tree node",paraId:3,tocIndex:16},{value:"ReactNode | ((props: AntTreeNodeProps) => ReactNode)",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"renderProps: 4.20.0",paraId:3,tocIndex:16},{value:"styles",paraId:3,tocIndex:16},{value:"Semantic DOM style",paraId:3,tocIndex:16},{value:"Record<SemanticDOM, CSSProperties>",paraId:5,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"5.25.0",paraId:3,tocIndex:16},{value:"tagRender",paraId:3,tocIndex:16},{value:"Customize tag render when ",paraId:3,tocIndex:16},{value:"multiple",paraId:3,tocIndex:16},{value:"(props) => ReactNode",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"treeCheckable",paraId:3,tocIndex:16},{value:"Whether to show checkbox on the treeNodes",paraId:3,tocIndex:16},{value:"boolean",paraId:3,tocIndex:16},{value:"false",paraId:3,tocIndex:16},{value:"treeCheckStrictly",paraId:3,tocIndex:16},{value:"Whether to check nodes precisely (in the ",paraId:3,tocIndex:16},{value:"checkable",paraId:3,tocIndex:16},{value:" mode), means parent and child nodes are not associated, and it will make ",paraId:3,tocIndex:16},{value:"labelInValue",paraId:3,tocIndex:16},{value:" be true",paraId:3,tocIndex:16},{value:"boolean",paraId:3,tocIndex:16},{value:"false",paraId:3,tocIndex:16},{value:"treeData",paraId:3,tocIndex:16},{value:"Data of the treeNodes, manual construction work is no longer needed if this property has been set(ensure the Uniqueness of each value)",paraId:3,tocIndex:16},{value:"array<{ value, title, children, [disabled, disableCheckbox, selectable, checkable] }>",paraId:3,tocIndex:16},{value:"[]",paraId:3,tocIndex:16},{value:"treeDataSimpleMode",paraId:3,tocIndex:16},{value:"Enable simple mode of treeData. Changes the ",paraId:3,tocIndex:16},{value:"treeData",paraId:3,tocIndex:16},{value:" schema to: [{id:1, pId:0, value:'1', title:\"test1\",...},...] where pId is parent node's id). It is possible to replace the default ",paraId:3,tocIndex:16},{value:"id",paraId:3,tocIndex:16},{value:" and ",paraId:3,tocIndex:16},{value:"pId",paraId:3,tocIndex:16},{value:" keys by providing object to ",paraId:3,tocIndex:16},{value:"treeDataSimpleMode",paraId:3,tocIndex:16},{value:"boolean | object<{ id: string, pId: string, rootPId: string }>",paraId:3,tocIndex:16},{value:"false",paraId:3,tocIndex:16},{value:"treeTitleRender",paraId:3,tocIndex:16},{value:"Customize tree node title render",paraId:3,tocIndex:16},{value:"(nodeData) => ReactNode",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"5.12.0",paraId:3,tocIndex:16},{value:"treeDefaultExpandAll",paraId:3,tocIndex:16},{value:"Whether to expand all treeNodes by default",paraId:3,tocIndex:16},{value:"boolean",paraId:3,tocIndex:16},{value:"false",paraId:3,tocIndex:16},{value:"treeDefaultExpandedKeys",paraId:3,tocIndex:16},{value:"Default expanded treeNodes",paraId:3,tocIndex:16},{value:"string[]",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"treeExpandAction",paraId:3,tocIndex:16},{value:"Tree title open logic when click, optional: false | ",paraId:3,tocIndex:16},{value:"click",paraId:3,tocIndex:16},{value:" | ",paraId:3,tocIndex:16},{value:"doubleClick",paraId:3,tocIndex:16},{value:"string | boolean",paraId:3,tocIndex:16},{value:"false",paraId:3,tocIndex:16},{value:"4.21.0",paraId:3,tocIndex:16},{value:"treeExpandedKeys",paraId:3,tocIndex:16},{value:"Set expanded keys",paraId:3,tocIndex:16},{value:"string[]",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"treeIcon",paraId:3,tocIndex:16},{value:"Shows the icon before a TreeNode's title. There is no default style; you must set a custom style for it if set to ",paraId:3,tocIndex:16},{value:"true",paraId:3,tocIndex:16},{value:"boolean",paraId:3,tocIndex:16},{value:"false",paraId:3,tocIndex:16},{value:"treeLoadedKeys",paraId:3,tocIndex:16},{value:"(Controlled) Set loaded tree nodes, work with ",paraId:3,tocIndex:16},{value:"loadData",paraId:3,tocIndex:16},{value:" only",paraId:3,tocIndex:16},{value:"string[]",paraId:3,tocIndex:16},{value:"[]",paraId:3,tocIndex:16},{value:"treeLine",paraId:3,tocIndex:16},{value:"Show the line. Ref ",paraId:3,tocIndex:16},{value:"Tree - showLine",paraId:6,tocIndex:16},{value:"boolean | object",paraId:3,tocIndex:16},{value:"false",paraId:3,tocIndex:16},{value:"4.17.0",paraId:3,tocIndex:16},{value:"treeNodeFilterProp",paraId:3,tocIndex:16},{value:"Will be used for filtering if ",paraId:3,tocIndex:16},{value:"filterTreeNode",paraId:3,tocIndex:16},{value:" returns true",paraId:3,tocIndex:16},{value:"string",paraId:3,tocIndex:16},{value:"value",paraId:3,tocIndex:16},{value:"treeNodeLabelProp",paraId:3,tocIndex:16},{value:"Will render as content of select",paraId:3,tocIndex:16},{value:"string",paraId:3,tocIndex:16},{value:"title",paraId:3,tocIndex:16},{value:"value",paraId:3,tocIndex:16},{value:"To set the current selected treeNode(s)",paraId:3,tocIndex:16},{value:"string | string[]",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"variant",paraId:3,tocIndex:16},{value:"Variants of selector",paraId:3,tocIndex:16},{value:"outlined",paraId:3,tocIndex:16},{value:" | ",paraId:3,tocIndex:16},{value:"borderless",paraId:3,tocIndex:16},{value:" | ",paraId:3,tocIndex:16},{value:"filled",paraId:3,tocIndex:16},{value:" | ",paraId:3,tocIndex:16},{value:"underlined",paraId:3,tocIndex:16},{value:"outlined",paraId:3,tocIndex:16},{value:"5.13.0 | ",paraId:3,tocIndex:16},{value:"underlined",paraId:3,tocIndex:16},{value:": 5.24.0",paraId:3,tocIndex:16},{value:"virtual",paraId:3,tocIndex:16},{value:"Disable virtual scroll when set to false",paraId:3,tocIndex:16},{value:"boolean",paraId:3,tocIndex:16},{value:"true",paraId:3,tocIndex:16},{value:"4.1.0",paraId:3,tocIndex:16},{value:"onChange",paraId:3,tocIndex:16},{value:"A callback function, can be executed when selected treeNodes or input value change",paraId:3,tocIndex:16},{value:"function(value, label, extra)",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"onDropdownVisibleChange",paraId:3,tocIndex:16},{value:"Called when dropdown open, use ",paraId:3,tocIndex:16},{value:"onOpenChange",paraId:3,tocIndex:16},{value:" instead",paraId:3,tocIndex:16},{value:"function(open)",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"onSearch",paraId:3,tocIndex:16},{value:"A callback function, can be executed when the search input changes",paraId:3,tocIndex:16},{value:"function(value: string)",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"onSelect",paraId:3,tocIndex:16},{value:"A callback function, can be executed when you select a treeNode",paraId:3,tocIndex:16},{value:"function(value, node, extra)",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"onTreeExpand",paraId:3,tocIndex:16},{value:"A callback function, can be executed when treeNode expanded",paraId:3,tocIndex:16},{value:"function(expandedKeys)",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"onPopupScroll",paraId:3,tocIndex:16},{value:"Called when dropdown scrolls",paraId:3,tocIndex:16},{value:"(event: UIEvent) => void",paraId:3,tocIndex:16},{value:"-",paraId:3,tocIndex:16},{value:"5.17.0",paraId:3,tocIndex:16},{value:"Name",paraId:7,tocIndex:17},{value:"Description",paraId:7,tocIndex:17},{value:"Version",paraId:7,tocIndex:17},{value:"blur()",paraId:7,tocIndex:17},{value:"Remove focus",paraId:7,tocIndex:17},{value:"focus()",paraId:7,tocIndex:17},{value:"Get focus",paraId:7,tocIndex:17},{value:"We recommend you to use ",paraId:8,tocIndex:18},{value:"treeData",paraId:8,tocIndex:18},{value:" rather than ",paraId:8,tocIndex:18},{value:"TreeNode",paraId:8,tocIndex:18},{value:", to avoid the trouble of manual construction.",paraId:8,tocIndex:18},{value:"Property",paraId:9,tocIndex:18},{value:"Description",paraId:9,tocIndex:18},{value:"Type",paraId:9,tocIndex:18},{value:"Default",paraId:9,tocIndex:18},{value:"Version",paraId:9,tocIndex:18},{value:"checkable",paraId:9,tocIndex:18},{value:"When Tree is checkable, set TreeNode display Checkbox or not",paraId:9,tocIndex:18},{value:"boolean",paraId:9,tocIndex:18},{value:"-",paraId:9,tocIndex:18},{value:"disableCheckbox",paraId:9,tocIndex:18},{value:"Disables the checkbox of the treeNode",paraId:9,tocIndex:18},{value:"boolean",paraId:9,tocIndex:18},{value:"false",paraId:9,tocIndex:18},{value:"disabled",paraId:9,tocIndex:18},{value:"Disabled or not",paraId:9,tocIndex:18},{value:"boolean",paraId:9,tocIndex:18},{value:"false",paraId:9,tocIndex:18},{value:"isLeaf",paraId:9,tocIndex:18},{value:"Leaf node or not",paraId:9,tocIndex:18},{value:"boolean",paraId:9,tocIndex:18},{value:"false",paraId:9,tocIndex:18},{value:"key",paraId:9,tocIndex:18},{value:"Required property (unless using ",paraId:9,tocIndex:18},{value:"treeDataSimpleMode",paraId:9,tocIndex:18},{value:"), should be unique in the tree",paraId:9,tocIndex:18},{value:"string",paraId:9,tocIndex:18},{value:"-",paraId:9,tocIndex:18},{value:"selectable",paraId:9,tocIndex:18},{value:"Whether can be selected",paraId:9,tocIndex:18},{value:"boolean",paraId:9,tocIndex:18},{value:"true",paraId:9,tocIndex:18},{value:"title",paraId:9,tocIndex:18},{value:"Content showed on the treeNodes",paraId:9,tocIndex:18},{value:"ReactNode",paraId:9,tocIndex:18},{value:"---",paraId:9,tocIndex:18},{value:"value",paraId:9,tocIndex:18},{value:"Will be treated as ",paraId:9,tocIndex:18},{value:"treeNodeFilterProp",paraId:9,tocIndex:18},{value:" by default, should be unique in the tree",paraId:9,tocIndex:18},{value:"string",paraId:9,tocIndex:18},{value:"-",paraId:9,tocIndex:18},{value:"We don't provide this since performance consideration. You can get by this way: ",paraId:10,tocIndex:22},{value:"https://codesandbox.io/s/get-parent-node-in-onchange-eb1608",paraId:10,tocIndex:22},{value:"You can ref Select ",paraId:11,tocIndex:23},{value:"FAQ",paraId:12,tocIndex:23},{value:".",paraId:11,tocIndex:23},{value:"loadData",paraId:13},{value:"In earlier version, ",paraId:14,tocIndex:24},{value:"loadData",paraId:14,tocIndex:24},{value:" will be triggered when searching. But we got feedback that it will block network when inputting. So we change it to not trigger ",paraId:14,tocIndex:24},{value:"loadData",paraId:14,tocIndex:24},{value:" when searching. But you can still handle async logic by ",paraId:14,tocIndex:24},{value:"filterTreeNode",paraId:14,tocIndex:24},{value:":",paraId:14,tocIndex:24},{value:"<TreeSelect\n  filterTreeNode={(input, treeNode) => {\n    const match = YOUR_LOGIC_HERE;\n\n    if (match && !treeNode.isLeaf && !treeNode.children) {\n      // Do some loading logic\n    }\n\n    return match;\n  }}\n/>\n",paraId:15,tocIndex:24},{value:"Just turn off virtual scrolling, because the ",paraId:16,tocIndex:25},{value:"scrollWidth",paraId:16,tocIndex:25},{value:" of the complete list cannot be accurately measured when virtual scrolling is turned on.",paraId:16,tocIndex:25}];}}]);