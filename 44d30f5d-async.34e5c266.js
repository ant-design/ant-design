(("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd=("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd||[]).push([["44d30f5d"],{"44d30f5d":function(e,a,t){"use strict";t.d(a,"__esModule",{value:!0}),t.d(a,"texts",{enumerable:!0,get:function(){return n;}}),t("937572df");let n=[{value:"Next.js",paraId:0},{value:" is currently the most popular React server-side isomorphic framework in the world. This article will try to use ",paraId:0},{value:"antd",paraId:0},{value:" components in projects created by Next.js.",paraId:0},{value:"Before all start, you may need install ",paraId:1,tocIndex:0},{value:"yarn",paraId:1,tocIndex:0},{value:" or ",paraId:1,tocIndex:0},{value:"pnpm",paraId:1,tocIndex:0},{value:" or ",paraId:1,tocIndex:0},{value:"bun",paraId:1,tocIndex:0},{value:".",paraId:1,tocIndex:0},{value:"The tool will create and initialize environment and dependencies automatically, please try config your proxy setting, or use another npm registry if any network errors happen during it.",paraId:2},{value:"After the initialization is complete, we enter the project and start.",paraId:3},{value:"$ cd antd-demo\n$ npm run dev\n",paraId:4},{value:"Open the browser at ",paraId:5},{value:"http://localhost:3000/",paraId:5},{value:". if you see the NEXT logo, it is considered a success.",paraId:5},{value:"Now we install ",paraId:6,tocIndex:1},{value:"antd",paraId:6,tocIndex:1},{value:" from yarn or npm or pnpm or bun.",paraId:6,tocIndex:1},{value:"Modify ",paraId:7},{value:"src/app/page.tsx",paraId:7},{value:", import Button component from ",paraId:7},{value:"antd",paraId:7},{value:".",paraId:7},{value:"import React from 'react';\nimport { Button } from 'antd';\n\nconst Home = () => (\n  <div className=\"App\">\n    <Button type=\"primary\">Button</Button>\n  </div>\n);\n\nexport default Home;\n",paraId:8},{value:"OK, you should now see a blue primary button displayed on the page. Next you can choose any components of ",paraId:9},{value:"antd",paraId:9},{value:" to develop your application. Visit other workflows of ",paraId:9},{value:"Next.js",paraId:9},{value:" at its ",paraId:9},{value:"User Guide",paraId:9},{value:".",paraId:9},{value:"You could find that components of antd do not have styles in the first screen. Next, you need to choose different SSR style processing methods according to the mode of Next.js.",paraId:10},{value:"Updated",paraId:11},{value:"If you are using the App Router in Next.js and using antd as your component library, to make the antd component library work better in your Next.js application and provide a better user experience, you can try using the following method to extract and inject antd's first-screen styles into HTML to avoid page flicker.",paraId:12,tocIndex:2},{value:"Install ",paraId:13,tocIndex:2},{value:"@ant-design/nextjs-registry",paraId:13,tocIndex:2},{value:"Use it in ",paraId:14},{value:"app/layout.tsx",paraId:14},{value:"import React from 'react';\nimport { AntdRegistry } from '@ant-design/nextjs-registry';\n\nconst RootLayout = ({ children }: React.PropsWithChildren) => (\n  <html lang=\"en\">\n    <body>\n      <AntdRegistry>{children}</AntdRegistry>\n    </body>\n  </html>\n);\n\nexport default RootLayout;\n",paraId:15},{value:"Next.js App Router currently not support using sub-components via ",paraId:16},{value:".",paraId:16},{value:" like ",paraId:16},{value:"<Select.Option />",paraId:16},{value:" and ",paraId:16},{value:"<Typography.Text />",paraId:16},{value:". Importing them from path would solve this problem.",paraId:16},{value:"For more detailed information, please refer to ",paraId:17},{value:"with-nextjs-app-router-inline-style",paraId:17},{value:".",paraId:17},{value:"If you are using the Pages Router in Next.js and using antd as your component library, to make the antd component library work better in your Next.js application and provide a better user experience, you can try using the following method to extract and inject antd's first-screen styles into HTML to avoid page flicker.",paraId:18,tocIndex:3},{value:"Install ",paraId:19,tocIndex:3},{value:"@ant-design/cssinjs",paraId:19,tocIndex:3},{value:"Notes for developers",paraId:20,tocIndex:3},{value:"Please note that when you install ",paraId:21,tocIndex:3},{value:"@ant-design/cssinjs",paraId:21,tocIndex:3},{value:", you must ensure that the version is consistent with the version of ",paraId:21,tocIndex:3},{value:"@ant-design/cssinjs",paraId:21,tocIndex:3},{value:" in local ",paraId:21,tocIndex:3},{value:"node_modules",paraId:21,tocIndex:3},{value:" of ",paraId:21,tocIndex:3},{value:"antd",paraId:21,tocIndex:3},{value:", otherwise, multiple React instances will appear, resulting in ctx being unable to be read correctly. (Tips: you can use ",paraId:21,tocIndex:3},{value:"npm ls @ant-design/cssinjs",paraId:21,tocIndex:3},{value:" command to view the local version)",paraId:21,tocIndex:3},{value:"Rewrite ",paraId:22},{value:"pages/_document.tsx",paraId:22},{value:"import React from 'react';\nimport { createCache, extractStyle, StyleProvider } from '@ant-design/cssinjs';\nimport Document, { Head, Html, Main, NextScript } from 'next/document';\nimport type { DocumentContext } from 'next/document';\n\nconst MyDocument = () => (\n  <Html lang=\"en\">\n    <Head />\n    <body>\n      <Main />\n      <NextScript />\n    </body>\n  </Html>\n);\n\nMyDocument.getInitialProps = async (ctx: DocumentContext) => {\n  const cache = createCache();\n  const originalRenderPage = ctx.renderPage;\n  ctx.renderPage = () =>\n    originalRenderPage({\n      enhanceApp: (App) => (props) => (\n        <StyleProvider cache={cache}>\n          <App {...props} />\n        </StyleProvider>\n      ),\n    });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  const style = extractStyle(cache, true);\n  return {\n    ...initialProps,\n    styles: (\n      <>\n        {initialProps.styles}\n        <style dangerouslySetInnerHTML={{ __html: style }} />\n      </>\n    ),\n  };\n};\n\nexport default MyDocument;\n",paraId:23},{value:"Supports custom themes",paraId:24},{value:"// theme/themeConfig.ts\nimport type { ThemeConfig } from 'antd';\n\nconst theme: ThemeConfig = {\n  token: {\n    fontSize: 16,\n    colorPrimary: '#52c41a',\n  },\n};\n\nexport default theme;\n",paraId:25},{value:"Rewrite ",paraId:26},{value:"pages/_app.tsx",paraId:26},{value:"import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport type { AppProps } from 'next/app';\n\nimport theme from './theme/themeConfig';\n\nconst App = ({ Component, pageProps }: AppProps) => (\n  <ConfigProvider theme={theme}>\n    <Component {...pageProps} />\n  </ConfigProvider>\n);\n\nexport default App;\n",paraId:27},{value:"Use antd in page component",paraId:28},{value:"import React from 'react';\nimport { Button } from 'antd';\n\nconst Home = () => (\n  <div className=\"App\">\n    <Button type=\"primary\">Button</Button>\n  </div>\n);\n\nexport default Home;\n",paraId:29},{value:"For more detailed information, please refer to ",paraId:30},{value:"with-nextjs-inline-style",paraId:30},{value:".",paraId:30}];}}]);