# Origin Source
# https://github.com/ant-design/ant-design/blob/79f566b7f8abb1012ef55b0d2793bfdf5595b85d/.github/workflows/test.yml
name: âœ… test

on: [push, pull_request]

# Cancel prev CI if new commit come
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: cache package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: create package-lock.json
        run: npm i --package-lock-only --ignore-scripts

      - name: hack for single file
        run: |
          if [ ! -d "package-temp-dir" ]; then
            mkdir package-temp-dir
          fi
          cp package-lock.json package-temp-dir
      - name: cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: npm ci

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore cache from package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: lint
        run: npm run lint
    needs: setup

  tsx-demo:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore cache from package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: tsx-demo
        run: npm run check-ts-demo
    needs: setup

  check_metadata:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore cache from package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: check demo
        run: node ./scripts/check-demo.js
    needs: setup

  ################################ Dist ################################
  dist:
    name: dist
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore cache from package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: cache dist
        uses: actions/cache@v3
        with:
          path: dist
          key: dist-${{ github.sha }}

      - name: dist
        run: CI=1 npm run dist
        env:
          NODE_OPTIONS: --max_old_space_size=4096
    needs: setup

  ############################### Style ################################
  style-compile:
    name: es style compile
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore cache from package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: restore cache from lib
        uses: actions/cache@v3
        with:
          path: lib
          key: lib-${{ github.sha }}

      - name: restore cache from es
        uses: actions/cache@v3
        with:
          path: es
          key: es-${{ github.sha }}

      - name: lessc component
        run: npx lessc --js ./es/button/style/index.less

      - name: lessc mixins
        run: npx lessc --js ./es/style/mixins/index.less
    needs: compile

  style-dist:
    name: dist style compile
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore cache from package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: restore cache from lib
        uses: actions/cache@v3
        with:
          path: lib
          key: lib-${{ github.sha }}

      - name: restore cache from es
        uses: actions/cache@v3
        with:
          path: es
          key: es-${{ github.sha }}

      - name: restore cache from dist
        uses: actions/cache@v3
        with:
          path: dist
          key: dist-${{ github.sha }}

      - name: lessc default
        run: npx lessc --js ./dist/antd.less

      - name: lessc dark
        run: npx lessc --js ./dist/antd.dark.less

      - name: lessc variable
        run: npx lessc --js ./dist/antd.variable.less
    needs: [compile, dist]

  ################################ Test ################################
  normal-test:
    name: test
    strategy:
      matrix:
        react: ['16', '17', '18']
        module: ['dom', 'node', 'dist']
        shard: ['1/2', '2/2']
    env:
      REACT: ${{ matrix.react }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore cache from package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: install react 16
        if: ${{ matrix.react == '16' }}
        run: npm run install-react-16

      - name: install react 17
        if: ${{ matrix.react == '17' }}
        run: npm run install-react-17

      - name: install react 18
        if: ${{ matrix.react == '18' }}
        run: npm run install-react-18

      - name: restore cache from dist
        if: ${{ matrix.module == 'dist' }}
        uses: actions/cache@v3
        with:
          path: dist
          key: dist-${{ github.sha }}

      - name: check
        if: ${{ matrix.module == 'dist' }}
        run: node ./tests/dekko/dist.test.js

      # 17 only
      - name: bundlesize
        if: ${{ matrix.module == 'dist' && matrix.react == '17' }}
        run: npm run bundlesize
        env:
          BUNDLESIZE_GITHUB_TOKEN: ${{ secrets.BUNDLESIZE_GITHUB_TOKEN }}

      # dom test
      - name: dom test
        if: ${{ matrix.module == 'dom' }}
        run: npm test -- --maxWorkers=2 --shard=${{matrix.shard}} --coverage

      - name: persist coverages
        if: ${{ matrix.module == 'dom' && matrix.react == '17' }}
        run: |
          mkdir persist-coverage
          mv coverage/coverage-final.json persist-coverage/react-${{matrix.react}}-test-${{matrix.module}}-${{strategy.job-index}}.json

      - uses: actions/upload-artifact@v4
        if: ${{ matrix.module == 'dom' && matrix.react == '17' }}
        name: upload coverages
        with:
          name: coverage-artifacts-${{ matrix.module }}-${{ strategy.job-index }}
          path: persist-coverage/

      # node test
      - name: node test
        if: ${{ matrix.module == 'node' }}
        run: npm run test-node

      # dist test
      - name: dist test
        if: ${{ matrix.module == 'dist' }}
        run: npm test
        env:
          LIB_DIR: dist
    needs: [setup, dist]

  ############################ Test Coverage ###########################
  upload-test-coverage:
    name: test-coverage
    runs-on: ubuntu-latest
    needs: [normal-test]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-artifacts-*
          merge-multiple: true
          path: persist-coverage
      - name: Merge Code Coverage
        run: |
          npx nyc merge persist-coverage/ coverage/coverage-final.json
          npx nyc report --reporter text -t coverage --report-dir coverage
          rm -rf persist-coverage
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v3
        with:
          # use own token to upload coverage reports
          token: ${{ secrets.CODECOV_TOKEN }}

  ########################### Compile & Test ###########################
  compile:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore cache from package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: cache lib
        uses: actions/cache@v3
        with:
          path: lib
          key: lib-${{ github.sha }}

      - name: cache es
        uses: actions/cache@v3
        with:
          path: es
          key: es-${{ github.sha }}

      - name: compile
        run: npm run compile

      - name: check
        run: node ./tests/dekko/lib.test.js
    needs: setup

  compiled-module-test:
    name: module test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        react: ['16', '17', '18']
        module: [lib, es]
        shard: ['1/2', '2/2']
    env:
      REACT: ${{ matrix.react }}
    steps:
      - name: checkout
        # lib only run in master branch not in pull request
        if: ${{ github.event_name != 'pull_request' || matrix.module != 'lib' }}
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore cache from package-lock.json
        # lib only run in master branch not in pull request
        if: ${{ github.event_name != 'pull_request' || matrix.module != 'lib' }}
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        # lib only run in master branch not in pull request
        if: ${{ github.event_name != 'pull_request' || matrix.module != 'lib' }}
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: restore cache from ${{ matrix.module }}
        # lib only run in master branch not in pull request
        if: ${{ github.event_name != 'pull_request' || matrix.module != 'lib' }}
        uses: actions/cache@v3
        with:
          path: ${{ matrix.module }}
          key: ${{ matrix.module }}-${{ github.sha }}

      - name: install react 16
        if: ${{ matrix.react == '16' && (github.event_name != 'pull_request' || matrix.module != 'lib') }}
        run: npm run install-react-16

      - name: install react 17
        if: ${{ matrix.react == '17' && (github.event_name != 'pull_request' || matrix.module != 'lib') }}
        run: npm run install-react-17

      - name: install react 18
        if: ${{ matrix.react == '18' && (github.event_name != 'pull_request' || matrix.module != 'lib') }}
        run: npm run install-react-18

      - name: test
        # lib only run in master branch not in pull request
        if: ${{ github.event_name != 'pull_request' || matrix.module != 'lib' }}
        run: npm test -- --maxWorkers=2 --shard=${{matrix.shard}}
        env:
          LIB_DIR: ${{ matrix.module }}
    needs: compile
