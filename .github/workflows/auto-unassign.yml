name: Auto Unassign

on:
  schedule:
    - cron: '0 0 * * *'  # Run at 00:00 every day

permissions:
  issues: write  # Need write permission to modify issue assignees

jobs:
  unassign_job:
    runs-on: ubuntu-latest
    steps:
      - name: Unassign inactive issues
        uses: actions/github-script@v6
        with:
          script: |
            const daysBeforeUnassign = 1; // Threshold for days without updates
            const { Octokit } = require("@octokit/action");
            const octokit = new Octokit();

            let page = 1;
            const perPage = 100;

            while (true) {
              const { data: issues } = await octokit.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                assignee: '*', // Filter assigned issues
                per_page: perPage,
                page: page,
              });

              if (issues.length === 0) {
                break;
              }

              const now = new Date();

              for (const issue of issues) {
                if (issue.pull_request) continue;

                const updatedAt = new Date(issue.updated_at);
                const daysInactive = (now - updatedAt) / (1000 * 60 * 60 * 24);

                // Check for comments
                const { data: comments } = await octokit.rest.issues.listComments({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  per_page: 1,
                });

                // Check for linked Pull Requests
                const { data: events } = await octokit.rest.issues.listEvents({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                });

                const hasLinkedPR = events.some(event => event.event === 'referenced' && event.commit_id);

                if (daysInactive >= daysBeforeUnassign && comments.length === 0 && !hasLinkedPR) {
                  // Remove assignees
                  await octokit.rest.issues.removeAssignees({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    assignees: issue.assignees.map(user => user.login),
                  });

                  await octokit.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    body: 'Due to inactivity, assignees have been automatically removed. Please reassign and update progress if needed.',
                  });
                }
              }

              page += 1;
            }