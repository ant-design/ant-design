// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Avatar Render adjusts component size to 24 when window size is xs 1`] = `
<div>
  <span
    class="ant-avatar ant-avatar-circle"
    style="width: 24px; height: 24px; line-height: 24px; font-size: 18px;"
  >
    <span
      class="ant-avatar-string"
      style="transform: scale(0.32) translateX(-50%);"
    />
  </span>
</div>
`;

exports[`Avatar Render adjusts component size to 32 when window size is sm 1`] = `
<div>
  <span
    class="ant-avatar ant-avatar-circle"
    style="width: 32px; height: 32px; line-height: 32px; font-size: 18px;"
  >
    <span
      class="ant-avatar-string"
      style="transform: scale(0.32) translateX(-50%);"
    />
  </span>
</div>
`;

exports[`Avatar Render adjusts component size to 40 when window size is md 1`] = `
<div>
  <span
    class="ant-avatar ant-avatar-circle"
    style="width: 40px; height: 40px; line-height: 40px; font-size: 18px;"
  >
    <span
      class="ant-avatar-string"
      style="transform: scale(0.32) translateX(-50%);"
    />
  </span>
</div>
`;

exports[`Avatar Render adjusts component size to 64 when window size is lg 1`] = `
<div>
  <span
    class="ant-avatar ant-avatar-circle"
    style="width: 64px; height: 64px; line-height: 64px; font-size: 18px;"
  >
    <span
      class="ant-avatar-string"
      style="transform: scale(0.32) translateX(-50%);"
    />
  </span>
</div>
`;

exports[`Avatar Render adjusts component size to 80 when window size is xl 1`] = `
<div>
  <span
    class="ant-avatar ant-avatar-circle"
    style="width: 80px; height: 80px; line-height: 80px; font-size: 18px;"
  >
    <span
      class="ant-avatar-string"
      style="transform: scale(0.32) translateX(-50%);"
    />
  </span>
</div>
`;

exports[`Avatar Render adjusts component size to 100 when window size is xxl 1`] = `
<div>
  <span
    class="ant-avatar ant-avatar-circle"
    style="width: 100px; height: 100px; line-height: 100px; font-size: 18px;"
  >
    <span
      class="ant-avatar-string"
      style="transform: scale(0.32) translateX(-50%);"
    />
  </span>
</div>
`;

exports[`Avatar Render fallback 1`] = `
<span
  class="ant-avatar ant-avatar-circle"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  >
    A
  </span>
</span>
`;

exports[`Avatar Render rtl render component should be rendered correctly in RTL direction 1`] = `
<span
  class="ant-avatar ant-avatar-circle"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(0.72) translateX(-50%);"
  />
</span>
`;

exports[`Avatar Render should calculate scale of avatar children correctly 1`] = `
<span
  class="ant-avatar-string"
  style="transform: scale(0.72) translateX(-50%);"
>
  Avatar
</span>
`;

exports[`Avatar Render should calculate scale of avatar children correctly 2`] = `
<span
  class="ant-avatar-string"
  style="transform: scale(0.72) translateX(-50%);"
>
  xx
</span>
`;

exports[`Avatar Render should calculate scale of avatar children correctly with gap 1`] = `
<span
  class="ant-avatar-string"
  style="transform: scale(0.36) translateX(-50%);"
>
  Avatar
</span>
`;

exports[`Avatar Render should handle onError correctly 1`] = `
<span
  class="ant-avatar ant-avatar-circle ant-avatar-image"
>
  <img
    src="https://joesch.moe/api/v1/random"
  />
</span>
`;

exports[`Avatar Render should show image on success after a failure state 1`] = `
<span
  class="ant-avatar ant-avatar-circle"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  >
    Fallback
  </span>
</span>
`;

exports[`Avatar Render should show image on success after a failure state 2`] = `
<span
  class="ant-avatar ant-avatar-circle ant-avatar-image"
>
  <img
    src="https://joesch.moe/api/v1/random"
  />
</span>
`;

exports[`Avatar Render support size is number 1`] = `
<span
  class="ant-avatar ant-avatar-circle"
  style="width: 100px; height: 100px; line-height: 100px; font-size: 18px;"
>
  <span
    class="ant-avatar-string"
    style="line-height: 100px; transform: scale(0.32) translateX(-50%);"
  >
    TestString
  </span>
</span>
`;
